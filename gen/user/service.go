// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// user service
//
// Command:
// $ goa gen
// github.com/akm/goa_v2_post_payload_including_snake_case_fields/design

package user

import (
	"context"

	userviews "github.com/akm/goa_v2_post_payload_including_snake_case_fields/gen/user/views"
)

// Service is the user service interface.
type Service interface {
	// Create implements create.
	Create(context.Context, *UserPayload) (res *User, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "user"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [1]string{"create"}

// UserPayload is the payload type of the user service create method.
type UserPayload struct {
	Firstname string
	Lastname  *string
}

// User is the result type of the user service create method.
type User struct {
	Firstname string
	Lastname  string
}

// NewUser initializes result type User from viewed result type User.
func NewUser(vres *userviews.User) *User {
	var res *User
	switch vres.View {
	case "default", "":
		res = newUser(vres.Projected)
	}
	return res
}

// NewViewedUser initializes viewed result type User from result type User
// using the given view.
func NewViewedUser(res *User, view string) *userviews.User {
	var vres *userviews.User
	switch view {
	case "default", "":
		p := newUserView(res)
		vres = &userviews.User{p, "default"}
	}
	return vres
}

// newUser converts projected type User to service type User.
func newUser(vres *userviews.UserView) *User {
	res := &User{}
	if vres.Firstname != nil {
		res.Firstname = *vres.Firstname
	}
	if vres.Lastname != nil {
		res.Lastname = *vres.Lastname
	}
	return res
}

// newUserView projects result type User into projected type UserView using the
// "default" view.
func newUserView(res *User) *userviews.UserView {
	vres := &userviews.UserView{
		Firstname: &res.Firstname,
		Lastname:  &res.Lastname,
	}
	return vres
}
